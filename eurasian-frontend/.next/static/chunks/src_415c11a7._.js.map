{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Kushagra%20Tandon/Downloads/eursianAuge/eurasian-frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { useRouter, useSearchParams } from 'next/navigation'\r\nimport { useUser } from '../contexts/UserContext'\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode\r\n  redirectTo?: string\r\n}\r\n\r\nexport function ProtectedRoute({ children, redirectTo = '/login' }: ProtectedRouteProps) {\r\n  const { user, isLoading } = useUser()\r\n  const router = useRouter()\r\n  const [hasRedirected, setHasRedirected] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // Only redirect if we're not loading, user is not authenticated, and we haven't redirected yet\r\n    if (!isLoading && !user && !hasRedirected) {\r\n      setHasRedirected(true)\r\n      // Add redirect parameter to indicate where the user was trying to go\r\n      const redirectUrl = `${redirectTo}?redirect=/dashboard`\r\n      router.push(redirectUrl)\r\n    }\r\n  }, [user, isLoading, router, redirectTo, hasRedirected])\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\"></div>\r\n          <p className=\"text-muted-foreground\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // If user is not authenticated and we haven't redirected yet, show nothing\r\n  if (!user && !hasRedirected) {\r\n    return null\r\n  }\r\n\r\n  // If user is not authenticated and we have redirected, show nothing\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  return <>{children}</>\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAWO,SAAS,eAAe,EAAE,QAAQ,EAAE,aAAa,QAAQ,EAAuB;;IACrF,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAClC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,+FAA+F;YAC/F,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,eAAe;gBACzC,iBAAiB;gBACjB,qEAAqE;gBACrE,MAAM,cAAc,GAAG,WAAW,oBAAoB,CAAC;gBACvD,OAAO,IAAI,CAAC;YACd;QACF;mCAAG;QAAC;QAAM;QAAW;QAAQ;QAAY;KAAc;IAEvD,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAI7C;IAEA,2EAA2E;IAC3E,IAAI,CAAC,QAAQ,CAAC,eAAe;QAC3B,OAAO;IACT;IAEA,oEAAoE;IACpE,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBAAO;kBAAG;;AACZ;GArCgB;;QACc,kIAAA,CAAA,UAAO;QACpB,qIAAA,CAAA,YAAS;;;KAFV","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Kushagra%20Tandon/Downloads/eursianAuge/eurasian-frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"../../lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Kushagra%20Tandon/Downloads/eursianAuge/eurasian-frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"../../lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"span\"> &\r\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\r\n  const Comp = asChild ? Slot : \"span\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"badge\"\r\n      className={cn(badgeVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Kushagra%20Tandon/Downloads/eursianAuge/eurasian-frontend/src/app/dashboard/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport { useUser } from '@/contexts/UserContext'\r\nimport { ProtectedRoute } from '@/components/ProtectedRoute'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Badge } from '@/components/ui/badge'\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from '@/components/ui/dropdown-menu'\r\nimport { useToast } from '@/hooks/use-toast'\r\nimport { \r\n  LayoutDashboard, \r\n  Shield, \r\n  Users, \r\n  BarChart3, \r\n  Settings, \r\n  LogOut,\r\n  Instagram,\r\n  Twitter,\r\n  Facebook,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  TrendingUp,\r\n  User,\r\n  ChevronDown,\r\n  CreditCard\r\n} from 'lucide-react'\r\n\r\nconst menuItems = [\r\n  {\r\n    title: \"Dashboard\",\r\n    url: \"/dashboard\",\r\n    icon: LayoutDashboard,\r\n    badge: null,\r\n  },\r\n  {\r\n    title: \"Threat Monitor\",\r\n    url: \"/dashboard/threats\",\r\n    icon: Shield,\r\n    badge: 2,\r\n  },\r\n  {\r\n    title: \"Social Accounts\",\r\n    url: \"/dashboard/social\",\r\n    icon: Users,\r\n    badge: null,\r\n  },\r\n  {\r\n    title: \"Analytics\",\r\n    url: \"/dashboard/analytics\",\r\n    icon: BarChart3,\r\n    badge: null,\r\n  },\r\n  {\r\n    title: \"Billing\",\r\n    url: \"/dashboard/billing\",\r\n    icon: CreditCard,\r\n    badge: null,\r\n  },\r\n  {\r\n    title: \"Settings\",\r\n    url: \"/dashboard/settings\",\r\n    icon: Settings,\r\n    badge: null,\r\n  },\r\n]\r\n\r\nexport default function DashboardPage() {\r\n  const { user, logout } = useUser()\r\n  const router = useRouter()\r\n  const { toast } = useToast()\r\n  const [loading, setLoading] = useState(true)\r\n  \r\n  // Real data state\r\n  const [metrics, setMetrics] = useState({\r\n    threatsBlocked: 1204,\r\n    accountsProtected: 3,\r\n    securityScore: null, // Will show error\r\n    activeAlerts: 2\r\n  })\r\n  \r\n  const [recentThreats, setRecentThreats] = useState([\r\n    {\r\n      id: 1,\r\n      platform: \"Twitter\",\r\n      type: \"Phishing Link\",\r\n      details: \"Suspicious URL detected in direct message\",\r\n      status: \"Blocked\",\r\n      date: \"2024-07-21\",\r\n      severity: \"High\"\r\n    },\r\n    {\r\n      id: 2,\r\n      platform: \"Instagram\",\r\n      type: \"Malicious Content\",\r\n      details: \"Harmful content flagged in comments\",\r\n      status: \"Flagged\",\r\n      date: \"2024-07-20\",\r\n      severity: \"Medium\"\r\n    },\r\n    {\r\n      id: 3,\r\n      platform: \"Facebook\",\r\n      type: \"Suspicious Login\",\r\n      details: \"Unusual login attempt detected\",\r\n      status: \"Alerted\",\r\n      date: \"2024-07-20\",\r\n      severity: \"High\"\r\n    },\r\n    {\r\n      id: 4,\r\n      platform: \"Twitter\",\r\n      type: \"Spam Bot\",\r\n      details: \"Automated spam account detected\",\r\n      status: \"Blocked\",\r\n      date: \"2024-07-19\",\r\n      severity: \"Low\"\r\n    },\r\n    {\r\n      id: 5,\r\n      platform: \"Instagram\",\r\n      type: \"Fake Profile\",\r\n      details: \"Impersonation account reported\",\r\n      status: \"Investigating\",\r\n      date: \"2024-07-18\",\r\n      severity: \"Medium\"\r\n    }\r\n  ])\r\n  \r\n  const [connectedAccounts, setConnectedAccounts] = useState([\r\n    { platform: \"Instagram\", username: \"@user123\", connected: true },\r\n    { platform: \"Twitter\", username: \"@user123\", connected: true },\r\n    { platform: \"Facebook\", username: \"User Name\", connected: false },\r\n  ])\r\n\r\n  // Fetch dashboard data\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        setLoading(true)\r\n        \r\n        // Fetch metrics\r\n        const metricsResponse = await fetch('/api/analytics/dashboard', {\r\n          credentials: 'include'\r\n        })\r\n        if (metricsResponse.ok) {\r\n          const metricsData = await metricsResponse.json()\r\n          setMetrics(metricsData.metrics || metrics)\r\n        }\r\n        \r\n        // Fetch recent threats\r\n        const threatsResponse = await fetch('/api/threats', {\r\n          credentials: 'include'\r\n        })\r\n        if (threatsResponse.ok) {\r\n          const threatsData = await threatsResponse.json()\r\n          if (threatsData.threats && threatsData.threats.length > 0) {\r\n            setRecentThreats(threatsData.threats.slice(0, 5))\r\n          }\r\n        }\r\n        \r\n        // Fetch connected accounts\r\n        const socialResponse = await fetch('/api/social', {\r\n          credentials: 'include'\r\n        })\r\n        if (socialResponse.ok) {\r\n          const socialData = await socialResponse.json()\r\n          if (socialData.accounts && socialData.accounts.length > 0) {\r\n            setConnectedAccounts(socialData.accounts)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching dashboard data:', error)\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"Failed to load dashboard data\",\r\n          variant: \"destructive\"\r\n        })\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    \r\n    if (user) {\r\n      fetchDashboardData()\r\n    }\r\n  }, [user, toast])\r\n\r\n  const handleLogout = () => {\r\n    if (confirm('Are you sure you want to logout?')) {\r\n      logout()\r\n      toast({\r\n        title: \"Logged out\",\r\n        description: \"You have been successfully logged out.\",\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleNavigation = (url: string) => {\r\n    router.push(url)\r\n  }\r\n\r\n  const handleConnectSocial = async (platform: string) => {\r\n    try {\r\n      // Initiate OAuth flow\r\n      const response = await fetch('/api/oauth/initiate', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ platform }),\r\n        credentials: 'include'\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        // For demo purposes, redirect to the callback URL\r\n        // In production, you would redirect to the actual OAuth URL\r\n        window.location.href = data.demoCallbackUrl\r\n      } else {\r\n        toast({\r\n          title: \"Connection failed\",\r\n          description: `Failed to initiate ${platform} OAuth flow.`,\r\n          variant: \"destructive\",\r\n        })\r\n      }\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Connection failed\",\r\n        description: `Failed to connect to ${platform}. Please try again.`,\r\n        variant: \"destructive\",\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ProtectedRoute>\r\n      <div className=\"flex h-screen bg-background\">\r\n        {/* Sidebar */}\r\n        <div className=\"w-64 bg-slate-900 text-white flex flex-col\">\r\n          <div className=\"p-6\">\r\n            <h1 className=\"text-xl font-bold\">Eurasian</h1>\r\n          </div>\r\n          \r\n          <nav className=\"flex-1 px-4 space-y-2\">\r\n            {menuItems.map((item) => (\r\n              <button\r\n                key={item.title}\r\n                onClick={() => handleNavigation(item.url)}\r\n                className={`w-full flex items-center justify-between px-4 py-3 text-left rounded-lg transition-colors ${\r\n                  item.title === \"Dashboard\" \r\n                    ? 'bg-blue-600 text-white' \r\n                    : 'text-slate-300 hover:bg-slate-800 hover:text-white'\r\n                }`}\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <item.icon className=\"h-5 w-5\" />\r\n                  <span className=\"font-medium\">{item.title}</span>\r\n                </div>\r\n                {item.badge && (\r\n                  <span className=\"bg-red-500 text-white text-xs px-2 py-1 rounded-full\">\r\n                    {item.badge}\r\n                  </span>\r\n                )}\r\n              </button>\r\n            ))}\r\n          </nav>\r\n          \r\n          <div className=\"p-4 border-t border-slate-800\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Avatar className=\"h-8 w-8\">\r\n                <AvatarImage src={user?.avatar} alt={user?.name} />\r\n                <AvatarFallback>{user?.name?.charAt(0)}</AvatarFallback>\r\n              </Avatar>\r\n              <div className=\"flex-1 min-w-0\">\r\n                <p className=\"text-sm font-medium text-white truncate\">{user?.name}</p>\r\n                <p className=\"text-xs text-slate-400 truncate\">{user?.email}</p>\r\n              </div>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0 text-slate-300 hover:text-white hover:bg-slate-800\">\r\n                    <ChevronDown className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\r\n                  <DropdownMenuItem onClick={handleLogout}>\r\n                    <LogOut className=\"mr-2 h-4 w-4\" />\r\n                    Log out\r\n                  </DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"flex-1 flex flex-col overflow-hidden\">\r\n          {/* Header */}\r\n          <header className=\"bg-white border-b border-slate-200 px-6 py-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-slate-900\">Dashboard</h1>\r\n                <p className=\"text-slate-600\">Welcome back to your security dashboard</p>\r\n              </div>\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className=\"text-sm text-green-600 bg-green-50 px-3 py-1 rounded-full\">\r\n                  Login successful Welcome back to Eurasian!\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          {/* Main Content Area */}\r\n          <main className=\"flex-1 overflow-y-auto bg-slate-50 p-6\">\r\n            <div className=\"max-w-7xl mx-auto\">\r\n              {loading ? (\r\n                <div className=\"flex items-center justify-center h-64\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n                    <p className=\"text-slate-600\">Loading dashboard...</p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  {/* Metrics Cards */}\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n                    <Card className=\"border-slate-200\">\r\n                      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                        <CardTitle className=\"text-sm font-medium text-slate-600\">Threats Blocked</CardTitle>\r\n                        <CheckCircle className=\"h-4 w-4 text-green-600\" />\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"text-2xl font-bold text-slate-900\">{metrics.threatsBlocked.toLocaleString()}</div>\r\n                        <p className=\"text-xs text-green-600\">+20.1% from last month</p>\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"border-slate-200\">\r\n                      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                        <CardTitle className=\"text-sm font-medium text-slate-600\">Accounts Protected</CardTitle>\r\n                        <User className=\"h-4 w-4 text-blue-600\" />\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"text-2xl font-bold text-slate-900\">{metrics.accountsProtected}</div>\r\n                        <p className=\"text-xs text-slate-600\">{metrics.accountsProtected} connected</p>\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"border-slate-200\">\r\n                      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                        <CardTitle className=\"text-sm font-medium text-slate-600\">Security Score</CardTitle>\r\n                        <TrendingUp className=\"h-4 w-4 text-green-600\" />\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        {metrics.securityScore !== null ? (\r\n                          <>\r\n                            <div className=\"text-2xl font-bold text-slate-900\">{metrics.securityScore}%</div>\r\n                            <p className=\"text-xs text-green-600\">Excellent</p>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <div className=\"text-2xl font-bold text-red-600\">Error</div>\r\n                            <p className=\"text-xs text-red-600\">Could not load security score</p>\r\n                          </>\r\n                        )}\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"border-slate-200\">\r\n                      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                        <CardTitle className=\"text-sm font-medium text-slate-600\">Active Alerts</CardTitle>\r\n                        <AlertTriangle className=\"h-4 w-4 text-orange-600\" />\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"text-2xl font-bold text-slate-900\">{metrics.activeAlerts}</div>\r\n                        <p className=\"text-xs text-orange-600\">Requires attention</p>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                    {/* Recent Threats */}\r\n                    <Card className=\"border-slate-200\">\r\n                      <CardHeader>\r\n                        <CardTitle className=\"text-slate-900\">Recent Threats</CardTitle>\r\n                        <CardDescription className=\"text-slate-600\">Latest security threats detected and blocked</CardDescription>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"space-y-4\">\r\n                          <div className=\"grid grid-cols-5 gap-4 text-xs font-medium text-slate-500 uppercase tracking-wider pb-2 border-b\">\r\n                            <div>Platform</div>\r\n                            <div>Type</div>\r\n                            <div className=\"col-span-2\">Details</div>\r\n                            <div>Status</div>\r\n                          </div>\r\n                          {recentThreats.map((threat) => (\r\n                            <div key={threat.id} className=\"grid grid-cols-5 gap-4 text-sm\">\r\n                              <div className=\"font-medium\">{threat.platform}</div>\r\n                              <div>{threat.type}</div>\r\n                              <div className=\"col-span-2 text-slate-600\">{threat.details}</div>\r\n                              <div>\r\n                                <Badge \r\n                                  variant={threat.status === 'Blocked' ? 'default' : \r\n                                          threat.status === 'Flagged' ? 'secondary' : \r\n                                          threat.status === 'Alerted' ? 'destructive' : 'outline'}\r\n                                  className=\"text-xs\"\r\n                                >\r\n                                  {threat.status}\r\n                                </Badge>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    {/* Connected Accounts */}\r\n                    <Card className=\"border-slate-200\">\r\n                      <CardHeader>\r\n                        <CardTitle className=\"text-slate-900\">Connected Accounts</CardTitle>\r\n                        <CardDescription className=\"text-slate-600\">Social media accounts under protection</CardDescription>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"space-y-4\">\r\n                          <p className=\"text-sm text-slate-600 mb-4\">Connect your social media accounts to protect them from security threats.</p>\r\n                          {connectedAccounts.map((account, index) => (\r\n                            <div key={index} className=\"flex items-center justify-between p-3 border border-slate-200 rounded-lg\">\r\n                              <div className=\"flex items-center space-x-3\">\r\n                                {account.platform === 'Instagram' && <Instagram className=\"h-5 w-5 text-pink-600\" />}\r\n                                {account.platform === 'Twitter' && <Twitter className=\"h-5 w-5 text-blue-400\" />}\r\n                                {account.platform === 'Facebook' && <Facebook className=\"h-5 w-5 text-blue-600\" />}\r\n                                <div>\r\n                                  <p className=\"font-medium text-slate-900\">{account.platform}</p>\r\n                                  <p className=\"text-sm text-slate-600\">\r\n                                    {account.connected ? account.username : 'Not connected'}\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                              <Button\r\n                                variant={account.connected ? \"outline\" : \"default\"}\r\n                                size=\"sm\"\r\n                                onClick={() => handleConnectSocial(account.platform)}\r\n                              >\r\n                                {account.connected ? 'Manage' : 'Connect'}\r\n                              </Button>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </ProtectedRoute>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}